% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean.R
\name{forecast.mean_model}
\alias{forecast.mean_model}
\alias{meanf}
\title{Mean Forecast}
\usage{
\method{forecast}{mean_model}(
  object,
  h = 10,
  level = c(80, 95),
  fan = FALSE,
  lambda = object$lambda,
  biasadj = NULL,
  bootstrap = FALSE,
  npaths = 5000,
  ...
)

meanf(
  y,
  h = 10,
  level = c(80, 95),
  fan = FALSE,
  lambda = NULL,
  biasadj = FALSE,
  bootstrap = FALSE,
  npaths = 5000,
  x = y
)
}
\arguments{
\item{object}{An object of class \code{mean_model} as returned by \code{\link[=mean_model]{mean_model()}}.}

\item{h}{Number of periods for forecasting. If \code{xreg} is used, \code{h}
is ignored and the number of forecast periods is set to the number of rows
of \code{xreg}.}

\item{level}{Confidence level for prediction intervals.}

\item{fan}{If \code{TRUE}, level is set to \code{seq(51, 99, by = 3)}. This
is suitable for fan plots.}

\item{lambda}{Box-Cox transformation parameter. If \code{lambda = "auto"},
then a transformation is automatically selected using \code{BoxCox.lambda}.
The transformation is ignored if NULL. Otherwise,
data transformed before model is estimated.}

\item{biasadj}{Use adjusted back-transformed mean for Box-Cox
transformations. If transformed data is used to produce forecasts and fitted
values, a regular back transformation will result in median forecasts. If
biasadj is \code{TRUE}, an adjustment will be made to produce mean forecasts
and fitted values.}

\item{bootstrap}{If \code{TRUE}, then prediction intervals computed using
simulation with resampled errors.}

\item{npaths}{Number of sample paths used in computing simulated prediction
intervals when \code{bootstrap = TRUE}.}

\item{...}{Other arguments.}

\item{y}{A univariate time series of class \code{ts}.}

\item{x}{Deprecated. Included for backwards compatibility.}
}
\value{
An object of class \code{forecast} which is a list containing at least the
following elements:
\describe{
\item{\code{model}}{A list containing information about the fitted model}
\item{\code{method}}{The name of the forecasting method as a character string}
\item{\code{mean}}{Point forecasts as a time series}
\item{\code{lower}}{Lower limits for prediction intervals}
\item{\code{upper}}{Upper limits for prediction intervals}
\item{\code{level}}{The confidence values associated with the prediction intervals}
\item{\code{x}}{The original time series}
\item{\code{residuals}}{Residuals from the fitted model}
\item{\code{fitted}}{Fitted values (one-step forecasts)}
}
}
\description{
Returns forecasts and prediction intervals for a Gaussian iid model.
}
\details{
The model assumes that the data are independent and identically distributed

\deqn{Y_t \sim N(\mu,\sigma^2)}{Y[t] ~ N(mu, sigma^2)}

Forecasts are given by

\deqn{Y_{n+h|n}=\mu}{Y[n+h|n]=mu}

where \eqn{\mu}{mu} is estimated by the sample mean.

\code{\link[=meanf]{meanf()}} is a convenience function that combines \code{\link[=mean_model]{mean_model()}} and \code{\link[=forecast]{forecast()}}.
}
\examples{
fit_nile <- mean_model(Nile)
fit_nile |> forecast(h=10) |> autoplot()
nile.fcast <- meanf(Nile, h = 10)
}
\seealso{
\code{\link[=mean_model]{mean_model()}}
}
